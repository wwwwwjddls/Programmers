https://programmers.co.kr/learn/courses/30/lessons/42628

[풀이]
1. operations 요소를 확인힌다.
2. 요소를 공란을 기준으로 나눈다.
3. 첫 번째 요소가 I인 경우 두 번재 요소를 배열에 다믄다.
4. 첫 번재 요소가 D이고 두 번째 요소가 0보다 작으면 배열의 첫 번재 요소를 0보다 크면 마지막 요소를 제거한다.
5. 배열을 정렬한다.
6. 배열의 길이가 0인 경우 [0,0]을 반환하고, 아닌경우 [마지막 요소(최대), 첫 번째 요소(최소)]를 반환한다.

[소스 - JavaScript]
function solution(operations) {
  var answer = [0,0];
  var que    = [];

  operations.forEach((a) => {
    var a_ = a.split(' ');
    if(a_[0]==='I') que.push(Number(a_[1]));
    else {
      (a_[1]<0) ? que.shift() : que.pop();
    }
    que.sort((a,b) => a-b);
  });
  
  return answer = (que.length===0) ? answer : [que[que.length-1], que[0]];
}

[소스 - Java]
import java.util.*;

class Solution {
  public int[] solution(String[] operations) {
    int[] answer               = {0,0};
    PriorityQueue<Integer> max = new PriorityQueue<>(Collections.reverseOrder());
    PriorityQueue<Integer> min = new PriorityQueue<>();

    for(int i=0; i<operations.length; i++) {
      String[] a = operations[i].split(" ");
      if(a[0].equals("I")) {
        max.add(Integer.parseInt(a[1]));
        min.add(Integer.parseInt(a[1]));
      }
      else {
        if(Integer.parseInt(a[1])<0 && min.size()!=0)  max.remove(min.poll());
        if(Integer.parseInt(a[1])>=0 && max.size()!=0) min.remove(max.poll());
      }
    }
	
    if(min.size()!=0 || max.size()!=0) {
      answer[0] = (max.size()==0) ? min.peek() : max.peek();
      answer[1] = (min.size()==0) ? max.peek() : min.peek();
    }

    return answer;
  }
}
