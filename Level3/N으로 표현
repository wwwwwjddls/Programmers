https://programmers.co.kr/learn/courses/30/lessons/42895

[풀이]
1. 1부터 8까지 N의 자릿 수를 늘려가며, 순서를 바꿔서 만들 수 있는 숫자의 경우의 수를 모두 구한다.
2. 1부터 8까지 N으로 만든 숫자를 순서를 바꿔가며 사칙연산으로 계산되는 모든 수를 구한다.
3. 구한 숫자 중 number가 포함되어 있으면 해당 자릿 수의 숫자를 반환한다.
4. 1부터 8까지 N으로 만든 숫자 중 number가 없는 경우 -1을 반환한다.

[소스 - JavaScript]
function solution(N, number) {
  var answer = -1;
  var num    = [];

  for(var i=1; i<=8; i++) {
    num.push(String(N).repeat(i));
    var case_ = getNum(i, num, [], []);

    for(var j=0; j<case_.length; j++) {
      var c_ = case_[j];
       if(cal(c_, [c_.shift()]).includes(number)) return i; 
    }
  }

  return answer;
}

function getNum(idx, n, t, r) {
  var t_ = t.join('');

  if(idx<=t_.length) {
    if(idx===t_.length) r.push([].concat(t));
    return;
  }

  for(var i=0; i<n.length; i++) {
    t.push(n[i]);
    getNum(idx, n, t, r);
    t.pop();
  }

  return r;
}

function cal(arr, r) {
  var tmp = [];
  var a   = Number(arr.shift());

  while(r.length!==0) {
    var r_ = Number(r.shift());

    if(isNaN(a)) {
      tmp.push(r_);
      break;
    }

    tmp.push(r_+a);
    tmp.push(r_-a);
    tmp.push(r_*a);
    if(a!==0) tmp.push(parseInt(r_/a));
    tmp.push(a+r_);
    tmp.push(a-r_);
    tmp.push(a*r_);
    if(r_!==0) tmp.push(parseInt(a/r_));
  }

  if(arr.length===0) return tmp
  else return cal(arr, tmp);
}
