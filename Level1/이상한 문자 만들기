[문제 설명]
문자열 s는 한 개 이상의 단어로 구성되어 있습니다. 각 단어는 하나 이상의 공백문자로 구분되어 있습니다.
각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.

[제한 사항]
• 문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.
• 첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.

[입출력 예]
s / return
"try hello world" / "TrY HeLlO WoRlD"

[입출력 예 설명]
"try hello world"는 세 단어 "try", "hello", "world"로 구성되어 있습니다. 
각 단어의 짝수번째 문자를 대문자로, 홀수번째 문자를 소문자로 바꾸면 "TrY", "HeLlO", "WoRlD"입니다. 따라서 "TrY HeLlO WoRlD"를 리턴합니다.

[풀이]
1. cnt를 기준으로 짝수인 경우 대문자 그리고 홀수인 경우 소문자로 변경하여 answer에 더한다. cnt + 1을 한다.
2. 공백인 경우 cnt를 0으로 변경한다.

[소스 - JavaScript]
function solution(s) {
  var answer = '';
  var cnt    = 0;
	
  for(let i=0; i<s.length; i++) {
    if(s[i] === ' ') {
      answer += ' ';
      cnt    = 0;
    } 
    else {
      answer += (cnt%2 === 0) ? s[i].toUpperCase() : s[i].toLowerCase();
      cnt    += 1;
    }
  }
	
  return answer
}

[소스 - Java]
class Solution {
  public String solution(String s) {
    String answer = "";
    int cnt       = 0;
		
    for(int i=0; i<s.length(); i++) {
      if(s.charAt(i) == ' ') {
        answer += ' ';
        cnt     = 0;
      }
      else {
        answer += (cnt%2 == 0) ? (s.charAt(i)+"").toUpperCase() : (s.charAt(i)+"").toLowerCase();
        cnt++;
      }
    }
		
    return answer;
  }
}
