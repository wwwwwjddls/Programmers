https://programmers.co.kr/learn/courses/30/lessons/12905

[풀이]
1. board에 1이있으면 max는 1, 없으면 max는 0으로 설정한다. 
2. board 요소하나씩 오른쪽, 아래, 대각선아래 요소를 확인한다.
3. 요소와 요소주변에 0이없는 경우 요소, 오른쪽, 아래 중 최솟값을 찾는다.
4. 최솟값+1을 대각선아래 요소에 담는다.
5. 최솟값+1의 최대값을 확인한다.
6. 최댓값 * 최댓값을 반환한다.

[소스 - JavaScript]
function solution(board) {
  var answer = 0;
  var max    = (board.some((a) => a.includes(1))) ? 1 : 0
  
  for(var i=0; i<board.length-1; i++) {
    for(var j=0; j<board[i].length-1; j++) {
      var [a,b,c,d] = [board[i][j], board[i+1][j], board[i][j+1], board[i+1][j+1]];
      if(a!==0 && b!==0 && c!==0 && d!==0) {
        var min = Math.min(a,b,c);
        board[i+1][j+1] = min+1;
        if(max<min+1) max = min+1;
      }
    }
  }
  
  return answer = max*max;
}

[소스 - Java]
class Solution {
  public int solution(int [][]board) {
    int answer = 0;
    int max    = 0;
    
    for(int i=0; i<board.length; i++) {
      for(int j=0; j<board[i].length; j++) {
        if(board[i][j]==1) {
          max = 1;
          break;
        }
      }
    }
    
    for(int i=0; i<board.length-1; i++) {
      for(int j=0; j<board[i].length-1; j++) {
        int a = board[i][j], b = board[i+1][j], c = board[i][j+1], d = board[i+1][j+1];
        if(a!=0 && b!=0 && c!=0 && d!=0) {
          int min = Math.min(Math.min(a, b), c);
          board[i+1][j+1] = min+1;
          if(max<min+1) max = min+1;
        }
      }
    }
    
    return answer = max*max;
  }
}
