https://programmers.co.kr/learn/courses/30/lessons/42860

[풀이]
1.좌우로 움직이는 것과 위아래로 움직이는 것으로 나누어 계산한다.
2. 위아래로 움직일 경우 'A'와 'z'에서의 차이가 적은 숫자를 반환한다.
3. 좌우로 움직일 경우 d에 name길이-1을 담는다.
4. name 요소 하나씩 왼쪽으로 가는 경우를 세서 d와 비교하여 d보다 작은 경우 d에 담는다.
5. 좌우와 위아래 합하여 반환한다.

[소스 - JavaScript]
function solution(name) {
  var answer = 0;   
  name.split('').forEach((a) => answer += ud(a));
  return answer + rl(name);
}

function ud(n) {
  var a  = 'A'.charCodeAt();
  var z  = 'Z'.charCodeAt();
  var s = n.charCodeAt();
  return Math.min(Math.abs(a-s), Math.abs(z-s+1));  
}

function rl(n) {
  var s = 0;
  var d = n.length-1;
  n.split('').forEach((a, i) => {
    if(a!=='A') {
      s = 0;
      d = (i*2+(n.length-1-i)<d) ? i*2+(n.length-1-i) : d;
    }
    else {
      s = (s===0) ? (i===0) ? 1 : i : s;
      d = ((s-1)*2+(n.length-i-1)<d) ? (s-1)*2+(n.length-i-1) : d
    }
  });
  return (s===0) ? d : s-1;
}

[소스 - Java]
class Solution {
  public int solution(String name) {	int answer = 0;
    for(int i=0; i<name.length(); i++) answer += ud(name.charAt(i));
    return answer + rl(name);
  }
    
  int ud(char n) {
    char a = "A".charAt(0);
    char z = "Z".charAt(0);
    return Math.min(Math.abs(a-n), Math.abs(z-n+1));
  }
    
  int rl(String n) {
    int s = 0;
    int d = n.length()-1;
	  
    for(int i=0; i<n.length(); i++) {
      char a = n.charAt(i);
		  
      if(a!='A') {
        s = 0;
        d = (i*2+(n.length()-i-1)<d) ? i*2+(n.length()-i-1) : d; 
      }
      else {
        s = (s==0) ? (i==0) ? 1 : i : s;
        d = ((s-1)*2+(n.length()-i-1)<d) ? (s-1)*2+(n.length()-i-1) : d;
      }
    }
    return (s==0) ? d : s-1;
  }
}
