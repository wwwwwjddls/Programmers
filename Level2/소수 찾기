https://programmers.co.kr/learn/courses/30/lessons/42839

[풀이]
1. numbers의 index로 만들 수 있는 수의 모든 경우의 수를 구한다.
2. 소수인경우와 answer_에 없는 경우 answer_에 담는다.
3. answer_의 길이를 반환한다.

[소스 - JavaScript]
function solution(numbers) {
  var answer  = 0;
  var num     = [];
  var answer_ = [];

  for(var i=1; i<=numbers.length; i++) {
    num = cases(numbers.length, i, [], num)
  }
      
  num.forEach((a) => {
    var n = Number(a.reduce((b, c) => b += numbers[c],''));
    if(decimal(n) && !answer_.includes(n)) answer_.push(n);
  });

  return answer = answer_.length;
}

function cases(len, cnt, temp, num) {
  if(temp.length==cnt) {
    num.push([].concat(temp));
    return;
  }

  for(var i=0; i<len; i++) {
    if(!temp.includes(i)) {
      temp.push(i);
      cases(len, cnt, temp, num);

      temp.pop();
    }
  } 

  return num;
}

function decimal(n) {
  if(n==0||n==1) return false;
  for(var i=2; i<=n/2; i++) {
    if(n%i==0) return false;
  }
  return true;
}

[소스 - Java]
import java.util.*;

class Solution {
  public int solution(String numbers) {
    int answer = 0;
    List<int[]> num = new ArrayList<>();
    List<Integer> answer_ = new ArrayList<>();
		
    for(int i=1; i<=numbers.length(); i++) {
      num = cases(numbers.length(), i, new ArrayList<>(), num);
    }

    for(int i=0; i<num.size(); i++) {
      String a = "";

      for(int j=0; j<num.get(i).length; j++) {
	      a += numbers.charAt(num.get(i)[j]);
      }
			
      int b = Integer.parseInt(a);
      if(decimal(b) && !answer_.contains(b)) answer_.add(b);
    }
		
    return answer = answer_.size();
  }
    
 public List<int[]> cases(int len, int cnt, List<Integer> temp, List<int[]> num) {
    if(temp.size()==cnt) {
      int[] a = temp.stream().mapToInt(i->i).toArray();
      num.add(a);
      return num;
    } 
		
    for(int i=0; i<len; i++) {
      if(!temp.contains(i)) {
	    temp.add(i);
        cases(len, cnt, temp, num);
				
        temp.remove(temp.size()-1);
      }
    }
		
    return num;    
  }

  public boolean decimal(int n) {
    if(n==0||n==1) return false;
    for(int i=2; i<=n/2; i++) {
      if(n%i==0) return false;
    }
    return true;      
  }
}
